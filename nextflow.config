manifest {
  name = 'FloWuenne/nf_molcart'
  author = 'Florian Wuennemann'
  homePage = 'https://github.com/FloWuenne/nf_molcart'
  description = 'A nextflow pipeline to process Molecular Cartography data.'
}

dag {
  overwrite = true
}

profiles {

  local {
    process.executor = 'local'
    docker.enabled = true
  }

  slurm {
    process.exectur = 'slurm'
  }
}

params {

    // Whether to create ilastik training images or not
    create_training_set = false

    // Location where to put the ilastik training images
    ilastik_training_dir = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/ilastik_training_set"
    crop_sum_dir = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/crop_summaries"
    tiff_training_dir = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/tiff_training_set"
    crop_overview_dir = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/tiff_training_crops"

    // Define samplesheet location as well as paths for images and spots
    sample_sheet = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/single_sample.crop.sample_sheet.nf_molcart.csv"
    imgs_path = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/"
    spots_path = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/"

    // Params for MINDAGAP_MINDAGAP
    mindagap_boxsize = 7
    mindagap_loopnum = 100

    // Parameters for MK_ILASTIK_TRAINING_STACKS
    crop_size_x = 500
    crop_size_y = 500
    nonzero_fraction = 0.1
    crop_amount = 4
    channel_ids = "1 2"

    // Ilastik models
    ilastik_pixelprob_model = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/ilastik_pixelprob.ilp"
    ilastik_multicut_model = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/ilastik_multicut.ilp"

    // Use mesmer for segmentation?
    use_mesmer = false

    //Cellpose params

    cellpose_model = "/Users/florian_wuennemann/1_Projects/MI_project/data/segmentation_models/CP_20230417_172320"

    outdir = "/Users/florian_wuennemann/1_Projects/MI_project/data/nextflow_test_data/small_test_data/nf_molcart_out"
}

process {
    withName: "MINDAGAP_MINDAGAP" {
      ext.args= ""
    }
    withName: "ILASTIK_PIXELCLASSIFICATION" {
      ext.args = '--output_format=hdf5 --export_source="Probabilities"'
    }
    withName: "ILASTIK_MULTICUT" {
        publishDir = [
          path: { "${params.outdir}/segmentations/ilastik_multicut" },
          mode: 'copy',
          pattern: "*.tif"
     ]
    }
    withName: "DEEPCELL_MESMER" {
      memory = "32GB"
      cpus = 6
      ext.args = '--image-mpp=0.138 --compartment=whole-cell --nuclear-channel 0'
      publishDir = [
          path: { "${params.outdir}/segmentations/mesmer" },
          mode: 'copy',
          pattern: "*.tif"
     ]
    }
    withName: "CELLPOSE" {
      // ext.args = '--pretrained_model cyto2 --channel_axis 0 --chan 1 --chan2 0 --no_npy --diameter 40 --fast_mode'
      ext.args = '--channel_axis 0 --chan 2 --chan2 1 --no_npy --diameter 51 --flow_threshold 0.6'
      publishDir = [
          path: { "${params.outdir}/segmentations/cellpose" },
          mode: 'copy',
          pattern: "*.tif"
     ]
    }
    withName: "MCQUANT_MESMER" {
      ext.args = "--intensity_props intensity_sum"
      publishDir = [
          path: { "${params.outdir}/quantification/mesmer" },
          mode: 'copy',
          pattern: "*.csv"
     ]
    }
    withName: "MCQUANT_CELLPOSE" {
      ext.args = "--intensity_props intensity_sum"
      publishDir = [
          path: { "${params.outdir}/quantification/cellpose" },
          mode: 'copy',
          pattern: "*.csv"
     ]
    }
    withName: "MCQUANT_ILASTIK" {
      ext.args = "--intensity_props intensity_sum"
      publishDir = [
          path: { "${params.outdir}/quantification/ilastik_multicut" },
          mode: 'copy',
          pattern: "*.csv"
     ]
    }
    withName: "SCIMAP_MCMICRO_MESMER" {
      publishDir = [
          path: { "${params.outdir}/quantification/mesmer" },
          mode: 'copy',
          pattern: "*.csv"
     ]
    }
    withName: "SCIMAP_MCMICRO_CELLPOSE" {
      publishDir = [
          path: { "${params.outdir}/quantification/cellpose" },
          mode: 'copy',
          pattern: "*.csv"
     ]
    }
    withName: "SCIMAP_MCMICRO_ILASTIK" {
      publishDir = [
          path: { "${params.outdir}/quantification/ilastik_multicut" },
          mode: 'copy',
          pattern: "*.csv"
     ]
    }
}

docker.runOptions = '--entrypoint ""'
